@import './normalize.scss';
@import './codemirror.scss';
//@import './theme_dark.scss';
@import './theme_light.scss';
@import './syntax.scss';
@import url('https://fonts.googleapis.com/css?family=Roboto|Roboto+Mono');

$githubGreen: #39aa56;
$size0: 8px;
$size1: 16px;
$size2: 32px;

$borderColor: #eee;
$accentColor: #589def;  // blue
$shadow: 0 2px 2px 0 rgba(17, 99, 194, 0.3);

$cellButtonSize: 24px;
$cellButtonMargin: 2px;
$nbGridSquare: $cellButtonSize + 2 * $cellButtonMargin;

/* NOTE html is set to 62.5% so that all the REM measurements
throughout Skeleton are based on 10px sizing. So 1.5rem = 15px :) */
html {
  font-size: 62.5%;
}

body {
  background-color: $bodyBackground;
  color: $textColor;
  font-family:
    helvetica,
    'helvetica neue',
    arial,
    sans-serif;
  font-size: 1.5em;
  line-height: 1.6;
}

/* Centers and gives max-width to index, references, notebook pages */
.splash,
.use-it-inner,
.flex-row,
.references,
.notebook {
  max-width: 960px;
  margin: 0 auto;
}

p {
  font-size: $size1;
  line-height: $size2;
  color: $textColor;
  margin: $size1;
}

h1,
h2 {
  letter-spacing: -0.1rem;
  line-height: 1.2;
}

h1 {
  font-size: 4rem;
}

h2 {
  font-size: 2.5rem;
}

a {
  color: $linkColor;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/* Don't allow SVGs to get wider than the screen. */
svg {
  max-width: 100%;
}

.button,
button,
input[type=button] {
  border: 1px solid #1163c2;
  border-radius: 4px;
  color: #1163c2;
  height: $size2;
  font-size: $size1;
  line-height: $size2;
  letter-spacing: 0.1rem;
  padding: 0 30px;
  text-align: center;
  text-transform: uppercase;
}

.name,
.typestr,
.retType,
.CodeMirror,
.docindex,
pre,
.output,
code {
  font-family: 'Roboto Mono', monospace;
}

header {
  background-color: $bodyBackground;
  border-bottom: 1px solid $textColor;
  color: $textColor;
  padding: $size0 0;

  p {
    font-size: 18px;
    line-height: 28px;
    font-weight: 100;
    margin-top: -2px;
    margin-bottom: 0;
  }
}

.use-it {
  background: #fafafa;

  .use-it-inner {
    padding: $size2 0;
  }

  p {
    margin: $size1 0 0 0;
  }

  pre {
    background: $bodyBackground;
  }
}

.notebook-cell {
  transition: border-left-color 0.2s;
  border-left: 1px solid $borderColor;

  button {
    z-index: 1000;
    padding: 0;
    border: 0;
    background-color: transparent;
    background-repeat: no-repeat;
    width: $cellButtonSize;
    height: $cellButtonSize;
    margin: $cellButtonMargin;
    opacity: 0; // Only display buttons when focused.
  }

  &.notebook-cell-focus {
    border-left: 1px solid $accentColor;

    button {
      opacity: 1;
    }
  }

  /* Margins for CodeMirror, pre and output should be same. */
  .CodeMirror,
  .input > pre,
  .output {
    margin: 0;
    padding: $size0;
    white-space: pre-wrap;
    word-break: keep-all;

    /* Spans the whole grid */
    grid-column: 1 / -1;
    grid-row: 1 / -1;
  }

  // Both input and output have a grid for buttons in the top and bottom right
  // hand corners.
  .input,
  .output-container {
    display: grid;
    grid-template-columns: 1fr $nbGridSquare;
    grid-template-rows:
      fit-content($nbGridSquare)
      1fr
      fit-content($nbGridSquare);
  }

  .input {
    border: 1px solid $borderColor;
    border-left: 0; // because the border is on notebook-cell.

    button.delete-button {
      /* Top right corner */
      grid-column: 2 / -1;
      grid-row: 1 / 2;
      background-image: url(/static/img/deleteButtonOutline.svg);

      &:hover {
        background-image: url(/static/img/deleteButtonFill.svg);
      }
    }

    button.run-button {
      /* Bottom right corner */
      grid-column: 2 / -1;
      grid-row: 3 / -1;
      background-image: url(/static/img/runButton.svg);
    }

    /* Auto-resizing cells. */
    .CodeMirror {
      height: auto;
    }
  }

  .output-container {
    .insert-button {
      /* Bottom right corner */
      grid-column: 2 / -1;
      grid-row: 3 / -1;
      background-image: url(/static/img/insertButton.svg);
    }
  }

  .notebook-cell-updating svg,
  .notebook-cell-updating .output {
    background-color: #cbcbd0;
  }
}

.flex-row {
  display: flex;
  flex-wrap: wrap;
  width: 100%;

  .flex-cell {
    flex-basis: 100%;
    flex-grow: 1;
    padding: $size0;
  }

  .flex-cell.intro-notebook {
    padding: 0;

    .notebook-cell {
      border-left: 0;
      border-right: 0;
    }
  }

  p {
    margin: 0;
  }
}

.splash {
  padding-bottom: $size2;
  background-color: $bodyBackground;
}

.intro h2 {
  margin-top: $size0;
}

.perks {
  h2 {
    min-height: 32px;
    padding-left: 40px;
    background-position: center left;
    background-repeat: no-repeat;

    &.world {
      background-image: url("/static/img/world.svg");
    }

    &.upward {
      background-image: url("/static/img/upward.svg");
    }

    &.chip {
      background-image: url("/static/img/chip.svg");
    }

    &.lightning {
      background-image: url("/static/img/lightning.svg");
    }
  }
}

.footer {
  width: 100%;
  margin-top: $size2;
  padding: $size1 0;
  background-color: #589def;
  text-align: center;

  a {
    color: $bodyBackground;
    font-weight: bold;
    text-transform: uppercase;
  }
}

.doc-entries {
  overflow-x: hidden;
  background-color: #f0f0f7;
}

.doc-entry {
  padding: 0;
  height: auto;
  padding-left: 0;
  border-top: 1px solid $bodyBackground;
  border-bottom: 1px solid $bodyBackground;
  margin-bottom: $size1;
  margin-top: $size1;
  box-shadow: $shadow;
  background-color: #fff;
  max-width: 60rem;

  .source-link {
    float: right;
    font-size: 10px;
    color: #666;
  }

  h2 {
    font-size: 20px;
    color: $linkColor;
    font-weight: 300;
  }

  h2,
  .source-link,
  .typestr {
    margin: $size0;
  }

  & .arg-global-header-title {
    font-weight: bold;
  }

  ol {
    margin: 0 $size1;
  }

  &:target {
    background-color: #fafaff;
    border-top: 1px solid $borderColor;
    border-bottom: 1px solid $borderColor;
    border-left: 2px solid $linkColor;
    box-shadow: $shadow;
  }
}

.panel {
  background-color: $bodyBackground;

  ol.docindex {
    list-style-type: none;
    margin: 0;
    padding: 0;
  }

  li {
    margin: 0 4px;
  }
}

.snippet-global-header-title {
  font-weight: 500;
  margin-bottom: -$size0;
}

.header-button {
  display: inline-block;
  margin: 0 10px 10px 0;
}

.most-recent {
  ol {
    display: flex;
    list-style-type: none;
    flex-wrap: wrap;

    li {
      background-color: $cellBackground;
      border: 1px solid $borderColor;
      margin: $size0;
      min-height: 200px;
      width: 200px;

      p {
        color: $base03;
      }

      &:hover {
        background-color: $linkColor;
      }
    }
  }
}

.propel-logo {
  display: flex;
  flex-direction: row;
  margin-right: $size0;
  margin-left: $size0;

  h1 {
    display: inline;
    font-size: 32pt;
    font-weight: bold;
  }

  h2 {
    display: inline;
    color: $accentColor;
    font-size: 16pt;
    font-weight: normal;
  }

  a,
  a:hover,
  a:visited,
  a:active {
    text-decoration: none;
    color: inherit;
  }

  * {
    margin: auto 0;
    margin-right: $size0;
  }
}

.global-header {
  width: 100%;
  background-color: inherit;

  .global-header-inner {
    display: flex;
    max-width: 930px;
    flex-direction: row;
    justify-content: space-between;
    height: 64px;
  }

  .global-header-right {
    display: flex;
    flex-direction: row;

    > * {
      display: block;
      margin: auto 0 auto 36px;
    }

    a {
      font-size: 14pt;
      font-variant: all-small-caps;
      text-decoration: none;
      color: $accentColor;
    }
  }
}

::selection {
  background: #00f;
  color: #fff;
}

.cells {
  margin-top: 50px;
}

.clone {
  background: $githubGreen;
  color: #fff;
  border: none;

  &:hover {
    color: #fff;
    background: darken($githubGreen, 10%);
  }
}

.blurb {
  display: flex;
  height: 55px;
  margin-bottom: $size0;

  img {
    margin-right: $size0;
  }
}

img.avatar {
  display: block;
  border-radius: 90px;
}

.dropdown {
  position: relative;

  .dropdown-content {
    display: none;
    position: absolute;
    width: auto;
    box-shadow: $shadow;
    background: $bodyBackground;
    z-index: 1;

    > * {
      display: block;
      white-space: nowrap;
      padding: $size0;

      &:hover {
        background-color: $accentColor;
      }
    }
  }

  &:hover .dropdown-content {
    display: block;
  }
}

// Mobile first. No desktop related things above this line.

@media (min-width: 600px) {
  h1 {
    font-size: 5rem;
  }

  .nav-buttons {
    text-align: left;
    padding-left: 12px;
  }

  $desktopPanelSize: 250px;

  .panel {
    top: 0;
    bottom: 0;
    left: 0;
    height: auto;
    position: fixed;
    overflow-y: auto;
    width: $desktopPanelSize;
    background-color: $bodyBackground;
  }

  .doc-entries {
    margin-left: $desktopPanelSize;
    padding-left: $size1;
    max-width: auto;
  }

  .flex-row {
    flex-wrap: nowrap;
    width: 100%;

    .flex-cell {
      flex-basis: 0;
    }
  }
}

